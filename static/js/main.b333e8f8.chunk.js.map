{"version":3,"sources":["assets/Rick_and_Morty_logo.png","assets/portal.png","components/LineUp.js","components/Logo.js","components/Social.js","components/NavigationArea.js","components/CharacterName.js","components/Avatar.js","components/Label.js","components/Description.js","components/LineDown.js","components/LearnMore.js","components/Arrow.js","components/Portal.js","components/GridContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LineUp","className","Logo","src","logo_img","alt","Social","href","target","class","NavigationArea","props","text","name","Avatar","image","Label","info","Description","gender","species","status","LineDown","LearMore","Arrow","onClick","countFn","Portal","console","log","state","portal","GridContainer","useState","count","setCount","data","setData","setPortal","url","a","fetch","response","json","useEffect","getData","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b333e8f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Rick_and_Morty_logo.42d6efdb.png\";","module.exports = __webpack_public_path__ + \"static/media/portal.7efec236.png\";","import React from 'react';\r\n\r\n\r\nexport default function LineUp(){\r\n    return(\r\n        <span className=\"line-up\">\r\n            <span className=\"line_point\"></span>\r\n            <span className=\"line_point\"></span>\r\n            <span className=\"line_point\"></span>\r\n            <span className=\"line_bar\"></span>\r\n        </span>\r\n );\r\n}","import React from 'react';\r\nimport logo_img from '../assets/Rick_and_Morty_logo.png';\r\n\r\n\r\nexport default function Logo(){\r\n    return(\r\n        <div className=\"logo\">\r\n            <img src= {logo_img} alt=\"logo\"></img>\r\n        </div>\r\n );\r\n}","import React from 'react';\r\n\r\nexport default function Social(){\r\n    return(\r\n      <div className=\"social\">\r\n          <a href=\"https://www.instagram.com/camilo_alvarez09/\" target=\"_blank\" className=\"fab fa-instagram social_icon\"></a>\r\n          <a href=\"https://www.facebook.com/profile.php?id=100005747640747\" target=\"_blank\" class=\"fab fa-facebook-square social_icon\"></a>\r\n          <a href=\"https://github.com/Andres-Alvarez-V\" target=\"_blank\" class=\"fab fa-github-square social_icon\"></a>\r\n      </div>  \r\n );\r\n}","import React from 'react';\r\n\r\n\r\nexport default function NavigationArea(props){\r\n    return(\r\n\r\n       <div className={\"navigation-area \" + props.text}>\r\n            <a href=\"/\" className=\"navigation-area_link\">{props.text}</a>\r\n       </div>\r\n    );\r\n}","import React from 'react';\r\n\r\n\r\nexport default function NavigationArea(props){\r\n    return(\r\n       <div className=\"character-name\">\r\n            <h2 className=\"character-name_name\">{props.name}</h2>\r\n       </div>\r\n    );\r\n}","import React from 'react';\r\n\r\n\r\nexport default function Avatar(props){\r\n    return(\r\n\r\n       <div className=\"character\">\r\n            <img className=\"character_avatar\" src={props.image} alt={props.name}></img>\r\n       </div>\r\n    );\r\n}","import React from 'react';\r\n\r\n\r\nexport default function Label(props){\r\n\r\n    return(\r\n       <>\r\n            <h3 className=\"description_label\">{props.text}: {props.info}</h3>\r\n       </>\r\n    );\r\n}","import React from 'react';\r\nimport Label from './Label';\r\n\r\n\r\nexport default function Description(props){\r\n    return(\r\n        <div className=\"description\">\r\n            <Label text=\"genero\" info={props.gender}/>\r\n            <Label text=\"especie\" info={props.species}/>\r\n            <Label text=\"estado\" info={props.status}/>\r\n        </div>\r\n       \r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function LineDown(){\r\n    return(\r\n        <span className=\"line-down\">\r\n            <span className=\"line_bar\"></span>\r\n            <span className=\"line_point\"></span>\r\n            <span className=\"line_point\"></span>\r\n            <span className=\"line_point\"></span>\r\n        </span>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function LearMore(){\r\n    return(\r\n        <div className=\"learn-more\">\r\n            <p className=\"learn-more_text\">Learn More</p>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function Arrow(props){\r\n    return(\r\n        <div className=\"arrow\" onClick={props.countFn}>\r\n            <i class=\"fas fa-arrow-circle-right arrow_right\"></i>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport portal from '../assets/portal.png'\r\n\r\nexport default function Portal(props){\r\n    console.log(props.state)\r\n    return (\r\n        <img src={portal} alt=\"Portal\" className={props.state}></img>\r\n        \r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport LineUp from './LineUp';\r\nimport Logo from './Logo';\r\nimport Social from './Social';\r\nimport NavigationArea from './NavigationArea';\r\nimport CharacterName from './CharacterName';\r\nimport Avatar from './Avatar';\r\nimport Description from './Description';\r\nimport LineDown from './LineDown';\r\nimport LearMore from './LearnMore';\r\nimport Arrow from './Arrow';\r\nimport Portal from './Portal';\r\n\r\n\r\nexport default function GridContainer(){\r\n\r\n    const URL = 'https://rickandmortyapi.com/api/character/'\r\n    \r\n    const [count, setCount] = useState(1);\r\n    const [data, setData] = useState({});\r\n    const [portal, setPortal] = useState('no-portal');\r\n\r\n    function countUp(){\r\n        setCount(count+1);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        setPortal('portal');\r\n        getData(`${URL}${count}`);\r\n        console.log(portal)\r\n    }, [count]);\r\n\r\n    async function getData(url) {\r\n        try {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            setPortal('no-portal');\r\n            setData(data);\r\n        } catch(e) {\r\n          console.log(e);\r\n        }\r\n        }\r\n\r\n    \r\n    // console.log(data)\r\n    // console.log(count)\r\n\r\n    return(\r\n        <div className=\"grid-container\">\r\n            <Portal state={portal} />\r\n            <LineUp/>\r\n            <Logo/>\r\n            <Social/>\r\n            <NavigationArea text=\"name\"/>\r\n            <CharacterName name={data.name}/>\r\n            <Avatar image={data.image} name= {data.name}/>\r\n            <NavigationArea text=\"about\"/>\r\n            <Description gender={data.gender} status={data.status} species={data.species}/>\r\n            <LineDown/>\r\n            <LearMore/>\r\n            <Arrow countFn={countUp}/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport './App.css';\nimport GridContainer from './components/GridContainer';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <GridContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}